<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chlsmile.manage.framework.dao.UserDao">

    <resultMap id="userMap" type="com.chlsmile.manage.framework.domain.User">
        <id column="id" property="id" />
        <result column="user_name" property="userName" />
        <result column="password" property="password" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="role_id" property="roleId" />
    </resultMap>

    <insert id="addUser" parameterType="com.chlsmile.manage.framework.domain.User">
        insert into t_user(user_name,password,create_time,update_time,role_id)
                  values(#{userName},#{password},#{createTime},#{updateTime},#{roleId})
    </insert>

    <update id="updateUserById" parameterType="com.chlsmile.manage.framework.domain.User">
        update t_user
        <set>
            <if test="userName!=null and userName!=''">
                user_name=#{userName},
            </if>
            <if test="password!=null and password!=''">
                password=#{password},
            </if>
            <if test="roleId!=null">
                role_id=#{roleId},
            </if>
            update_time=#{updateTime}
        </set>
        where id=#{id}
    </update>

    <delete id="deleteUserById" parameterType="long">
        delete
        from t_user
        where id=#{id}
    </delete>

    <select id="findUserById" parameterType="long" resultMap="userMap">
        select *
        from t_user
        where id=#{id}
    </select>

    <select id="queryUser" parameterType="com.chlsmile.manage.framework.domain.User" resultMap="userMap">
        select *
        from t_user
        <where>
            <if test="id!=null ">
                id=#{id}
            </if>
            <if test="userName!=null and userName!=''">
                and user_name=#{userName}
            </if>
            <if test="roleId!=null">
                and role_id=#{roleId}
            </if>
        </where>
    </select>

    <select id="getCount" resultType="int">
        select count(*)
        from t_user
        <where>
            <if test="id!=null ">
                id=#{id}
            </if>
            <if test="userName!=null and userName!=''">
                and user_name=#{userName}
            </if>
            <if test="roleId!=null">
                and role_id=#{roleId}
            </if>
        </where>
    </select>

    <select id="pageUser" resultMap="userMap">
        select *
        from t_user
        <where>
            <if test="user!=null">
                <if test="user.id!=null ">
                    id=#{user.id}
                </if>
                <if test="user.userName!=null and user.userName!=''">
                    and user_name=#{user.userName}
                </if>
                <if test="user.roleId!=null">
                    and role_id=#{user.roleId}
                </if>
            </if>
        </where>
        limit #{pageQuery.offSet},#{pageQuery.limit}
    </select>





</mapper>